<?php

/*
 * Auto-generated by libasynql-fx
 * Created from shop.sql, shop.sql
 */

declare(strict_types=1);

namespace SOFe\CapiTrade\Database;

use Generator;
use poggit\libasynql\DataConnector;
use SOFe\AwaitGenerator\Await;

final class RawQueries{
    public function __construct(private DataConnector $conn) {}

    /**
     * <h4>Declared in:</h4>
     * - CapiTrade/resources/mysql/shop.sql:57
     * - CapiTrade/resources/sqlite/shop.sql:58
     * @param string $shop_id
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
     */
    public function getPrice(string $shop_id, ) : Generator {
        $this->conn->executeSelect("capitrade.get_price", ["shop_id" => $shop_id, ], yield Await::RESOLVE, yield Await::REJECT);
        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - CapiTrade/resources/mysql/shop.sql:61
     * - CapiTrade/resources/sqlite/shop.sql:62
     * @param string $shop_id
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
     */
    public function getShopAccountSelector(string $shop_id, ) : Generator {
        $this->conn->executeSelect("capitrade.get_shop_account_selector", ["shop_id" => $shop_id, ], yield Await::RESOLVE, yield Await::REJECT);
        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - CapiTrade/resources/mysql/shop.sql:65
     * - CapiTrade/resources/sqlite/shop.sql:66
     * @param string $shop_id
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
     */
    public function getShopSchemaConfig(string $shop_id, ) : Generator {
        $this->conn->executeSelect("capitrade.get_shop_schema_config", ["shop_id" => $shop_id, ], yield Await::RESOLVE, yield Await::REJECT);
        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - CapiTrade/resources/mysql/shop.sql:53
     * - CapiTrade/resources/sqlite/shop.sql:54
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function init() : Generator {
        $this->conn->executeChange("capitrade.init", [], yield Await::RESOLVE, yield Await::REJECT);
        return yield Await::ONCE;
    }
}
